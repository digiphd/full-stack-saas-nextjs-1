{
  "openapi": "3.0.3",
  "info": {
    "title": "SaaS Starter API",
    "version": "1.0.0",
    "description": "API for SaaS Starter Kit",
    "contact": {
      "name": "SaaS Starter Team",
      "url": "https://github.com/yourusername/saas-starter"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check if the API is up and running",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trpc/user.me": {
      "get": {
        "summary": "Get current user",
        "description": "Get the currently authenticated user's information",
        "operationId": "getCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/trpc/user.update": {
      "post": {
        "summary": "Update user",
        "description": "Update the currently authenticated user's information",
        "operationId": "updateUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": true,
                    "example": {
                      "preferences": {
                        "theme": "dark"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/trpc/blog.list": {
      "get": {
        "summary": "List blog posts",
        "description": "Get a paginated list of blog posts",
        "operationId": "listBlogPosts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor for pagination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of blog posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BlogPost"
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trpc/blog.bySlug": {
      "get": {
        "summary": "Get blog post by slug",
        "description": "Get a blog post by its slug",
        "operationId": "getBlogPostBySlug",
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "description": "Blog post slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Blog post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "404": {
            "description": "Blog post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/trpc/email.send": {
      "post": {
        "summary": "Send email",
        "description": "Send an email using the Resend service",
        "operationId": "sendEmail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["to", "subject", "text"],
                "properties": {
                  "to": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "subject": {
                    "type": "string",
                    "example": "Welcome to SaaS Starter"
                  },
                  "text": {
                    "type": "string",
                    "example": "Thank you for signing up for SaaS Starter!"
                  },
                  "html": {
                    "type": "string",
                    "example": "<h1>Welcome!</h1><p>Thank you for signing up for SaaS Starter!</p>"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "Acme Inc."
          },
          "slug": {
            "type": "string",
            "example": "acme"
          },
          "plan": {
            "type": "string",
            "enum": ["free", "pro", "enterprise"],
            "example": "pro"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BlogPost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "title": {
            "type": "string",
            "example": "Getting Started with the SaaS Starter Kit"
          },
          "slug": {
            "type": "string",
            "example": "getting-started"
          },
          "content": {
            "type": "string",
            "example": "This is a sample blog post content..."
          },
          "summary": {
            "type": "string",
            "example": "Learn how to get started with our SaaS Starter Kit"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["tutorial", "getting-started"]
          },
          "published": {
            "type": "boolean",
            "example": true
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "slug": {
            "type": "string",
            "example": "about"
          },
          "heroTitle": {
            "type": "string",
            "example": "About Us"
          },
          "sections": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "layout": {
            "type": "string",
            "enum": ["default", "wide", "landing"],
            "example": "default"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "UNAUTHORIZED"
          },
          "message": {
            "type": "string",
            "example": "You must be logged in to access this resource"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "example": 1
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "example": 10
          },
          "totalItems": {
            "type": "integer",
            "minimum": 0,
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "minimum": 1,
            "example": 5
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
